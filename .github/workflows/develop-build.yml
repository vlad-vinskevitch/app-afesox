name: Maven CI for Develop

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2  # Ensure previous commit is available for comparison

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Verify GitHub Token Access
        run: |
          if [ -z "${{ secrets.APP_AFESOX }}" ]; then
            echo "ERROR: Secret APP_AFESOX is not set or not accessible."
            exit 1
          else
            echo "GitHub token is set."
          fi

      - name: Setup Maven settings
        run: |
          mkdir -p ~/.m2
          echo "<settings>
                  <servers>
                    <server>
                      <id>github</id>
                      <username>${{ github.actor }}</username>
                      <password>${{ secrets.APP_AFESOX }}</password>
                    </server>
                  </servers>
                </settings>" > ~/.m2/settings.xml

      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Detect changed YAML files
        id: detect_yaml
        run: |
          # Detect changed YAML files, but exclude any in the `.github` directory
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep -E '\.yml$' | grep -v '^\.github/')
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "No YAML files changed outside of .github directory."
            exit 1
          fi
          
          echo "Changed YAML files:"
          echo "$CHANGED_FILES"
          
          # Output to a temporary file
          echo "$CHANGED_FILES" > changed_files.txt

      - name: Extract Version from changed YAML file
        id: extract_version
        run: |
          # Read the changed files list from the temporary file
          CHANGED_FILES=$(cat changed_files.txt)
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "No YAML files found."
            exit 1
          fi

          # Process the first changed YAML file
          FIRST_FILE=$(echo "$CHANGED_FILES" | head -n 1)
          echo "Processing file: $FIRST_FILE"
          
          if [ -f "./$FIRST_FILE" ]; then  # Use ./ to reference the file from the repository root
            VERSION=$(yq e '.info.version' "./$FIRST_FILE")
            PACKAGE=$(basename "$FIRST_FILE" | sed 's/.yml//')
          
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "PACKAGE=$PACKAGE" >> $GITHUB_ENV
          else
            echo "Changed file does not exist: ./$FIRST_FILE"
            exit 1
          fi

          if [ -z "${{ env.VERSION }}" ]; then
            echo "No version found in the changed YAML files."
            exit 1
          fi

      - name: Build and Deploy with Maven
        run: |
          echo "Deploying to package: ${{ env.PACKAGE }} with version: ${{ env.VERSION }}"
          mvn clean package -Dproject.version=${{ env.VERSION }}
          
          if mvn deploy -Dproject.version=${{ env.VERSION }} -Dpackage=${{ env.PACKAGE }}; then
            echo "Deployment successful."
          else
            echo "Deployment failed. Version ${{ env.VERSION }} might already be deployed."
            exit 1
          fi
